//paste this into the browser console whilst playing blooket study.It is important that in the game your'e playing the correct answer is always in one spot. You will see a gui apear. Put this on the answer position where the correct answer will always be and press start. This will start a loop clicking on where the mouse is and pressing the space bar. 

(function () {
  // ----- Styles -----
  const style = document.createElement('style');
  style.textContent = `
    #clickerPanel {
      position: fixed;
      top: 50px;
      left: 50px;
      background: #222;
      color: white;
      padding: 10px 15px 15px 15px;
      border-radius: 8px;
      z-index: 9999;
      font-family: sans-serif;
      box-shadow: 0 0 10px #000;
      min-width: 220px;
    }
    #clickerPanel button {
      margin: 5px 5px 0 0;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-weight: bold;
      padding: 5px 10px;
    }
    #startClicker { background-color: #28a745; color: white; }
    #stopClicker { background-color: #dc3545; color: white; }

    .clickerHeaderButton {
      position: absolute;
      top: 5px;
      background: #888;
      color: white;
      width: 24px;
      height: 24px;
      border-radius: 50%;
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 16px;
      line-height: 1;
      padding: 0;
      cursor: pointer;
    }
    #minimizeClicker { right: 34px; }
    #closeClicker { right: 5px; }

    #delayControl {
      margin-top: 10px;
    }
    #delayLabel {
      margin-bottom: 4px;
      display: block;
    }
    input[type="range"] {
      width: 100%;
    }
    #clickerContent.collapsed {
      display: none;
    }
    #clickerStatus {
      margin-top: 10px;
      font-size: 13px;
    }
    #clickerStatus .dot {
      font-size: 20px;
      vertical-align: middle;
    }
    .running .dot { color: #28a745; }
    .stopped .dot { color: #dc3545; }
  `;
  document.head.appendChild(style);

  // ----- GUI Panel -----
  const panel = document.createElement('div');
  panel.id = 'clickerPanel';
  panel.innerHTML = `
    <button id="minimizeClicker" class="clickerHeaderButton">üóï</button>
    <button id="closeClicker" class="clickerHeaderButton">‚úï</button>
    <div style="margin-top: 10px; font-weight: bold;">Blooket Clicker</div>
    <div id="clickerContent">
      <button id="startClicker">Start</button>
      <button id="stopClicker">Stop</button>
      <div id="delayControl">
        <label id="delayLabel">Delay: <span id="delayValue">0</span> ms</label>
        <input type="range" id="clickDelaySlider" min="0" max="1000" value="0">
      </div>
      <div id="clickerStatus" class="stopped">
        <span class="dot">‚óè</span> Stopped
      </div>
    </div>
  `;
  document.body.appendChild(panel);

  // ----- Dragging -----
  let isDragging = false, offsetX = 0, offsetY = 0;
  panel.addEventListener('mousedown', e => {
    if (!['BUTTON', 'INPUT'].includes(e.target.tagName)) {
      isDragging = true;
      offsetX = e.offsetX;
      offsetY = e.offsetY;
    }
  });
  document.addEventListener('mousemove', e => {
    if (isDragging) {
      panel.style.left = `${e.pageX - offsetX}px`;
      panel.style.top = `${e.pageY - offsetY}px`;
    }
  });
  document.addEventListener('mouseup', () => isDragging = false);

  // ----- Mouse Tracking -----
  document.onmousemove = function (e) {
    window._lastMouse = { clientX: e.clientX, clientY: e.clientY };
  };

  // ----- Clicker -----
  let clickerInterval = null;
  let currentDelay = 0;

  const updateStatus = (running) => {
    const status = document.getElementById('clickerStatus');
    status.className = running ? 'running' : 'stopped';
    status.innerHTML = `<span class="dot">‚óè</span> ${running ? 'Running' : 'Stopped'}`;
  };

  function startClicker() {
    stopClicker();
    clickerInterval = setInterval(() => {
      const { clientX, clientY } = window._lastMouse || { clientX: 0, clientY: 0 };
      const el = document.elementFromPoint(clientX, clientY);

      // Prevent clicking inside GUI panel
      if (el && !panel.contains(el)) {
        el.click();

        const spaceEvent = new KeyboardEvent('keydown', {
          key: ' ',
          code: 'Space',
          keyCode: 32,
          which: 32,
          bubbles: true,
          cancelable: true
        });
        document.dispatchEvent(spaceEvent);
      }
    }, currentDelay);
    updateStatus(true);
  }

  function stopClicker() {
    if (clickerInterval) {
      clearInterval(clickerInterval);
      clickerInterval = null;
      updateStatus(false);
    }
  }

  // ----- Button Events -----
  document.getElementById('startClicker').onclick = startClicker;
  document.getElementById('stopClicker').onclick = stopClicker;
  document.getElementById('closeClicker').onclick = () => {
    stopClicker();
    panel.remove();
    style.remove();
    document.onmousemove = null;
  };

  const contentDiv = document.getElementById('clickerContent');
  let minimized = false;
  document.getElementById('minimizeClicker').onclick = () => {
    minimized = !minimized;
    contentDiv.classList.toggle('collapsed', minimized);
    document.getElementById('minimizeClicker').textContent = minimized ? 'üóñ' : 'üóï';
  };

  // ----- Delay Slider -----
  const delaySlider = document.getElementById('clickDelaySlider');
  const delayValueLabel = document.getElementById('delayValue');
  delaySlider.oninput = () => {
    currentDelay = parseInt(delaySlider.value);
    delayValueLabel.textContent = currentDelay;
    if (clickerInterval) startClicker(); // Restart with new delay
  };
  delaySlider.oninput();
})();

